{"version":3,"sources":["pages/LoginForm.js","pages/RegisterPage.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","userData","submitLogin","useState","email","password","loginData","setLoginData","error","setError","className","onSubmit","e","preventDefault","htmlFor","type","name","id","onChange","target","value","RegisterPage","Logins","details","setDetails","length","HomePage","user","height","weight","bmiData","setBMIData","graphBmi","setGraphBmi","graphLabels","setGraphLabels","class","bmi","date","Date","thisMonth","toLocaleString","month","getMonth","thisYear","getFullYear","today","getDate","getHours","getMinutes","getSeconds","today1","document","getElementById","innerHTML","toFixed","row","insertRow","dateCell","insertCell","bmiCell","heightCell","weightCell","prevState","for","data","labels","datasets","borderColor","backgroundColor","tension","fill","options","plugins","legend","display","scales","x","grid","y","suggestedMin","suggestedMax","App","setUser","loginSuccess","setLoginSuccess","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a971fa33.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './style/login.css'\r\n\r\nfunction LoginForm( {userData, submitLogin} ) {\r\n    const [loginData, setLoginData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [dataIsCorrect, setDataIsCorrect] = useState(false);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (loginData.email == \"\") {\r\n            setError(\"*Email can't be empty\");\r\n        }\r\n        else if (loginData.email != userData.email) {\r\n            setError(\"*Email not registered\");\r\n        }\r\n        else if (loginData.password == \"\") {\r\n            setError(\"*Password can't be empty\");\r\n        }\r\n        else if (loginData.password != userData.password) {\r\n            setError(\"*Wrong password\");\r\n        }\r\n        else{\r\n            submitLogin(true);\r\n        }\r\n    }; \r\n\r\n    return (\r\n        <div className=\"container2\">\r\n            <div className=\"form-container2\">\r\n                <form onSubmit={submitHandler}>\r\n                    <div className='form-inner'>\r\n                        <h2>Login</h2>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={e => setLoginData({ ...loginData, email: e.target.value })} value={loginData.email} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setLoginData({ ...loginData, password: e.target.value })} value={loginData.password} />\r\n                        </div>\r\n                        {(error != \"\") ? <p>{error}</p> : \"\"}\r\n                        <input type=\"submit\" value=\"Create Account\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm\r\n","import React, { useState } from 'react'\r\nimport './style/register.css'\r\n\r\nfunction RegisterPage({ Logins }) {\r\n\r\n    const [details, setDetails] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (details.name == \"\") {\r\n            setError(\"*Name can't be empty\");\r\n        }\r\n        else if (details.email == \"\") {\r\n            setError(\"*Email can't be empty\");\r\n        }\r\n        else if (details.password == \"\") {\r\n            setError(\"*Password can't be empty\");\r\n        }\r\n        else if (details.password.length < 9) {\r\n            setError(\"*Password must be more than 8 characters\");\r\n        }\r\n        else {\r\n            Logins(details);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container1\">\r\n            <div className=\"form-container1\">\r\n                <form onSubmit={submitHandler}>\r\n                    <div className='form-inner'>\r\n                        <h2>Register</h2>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input type=\"text\" name=\"name\" id=\"name\" onChange={e => setDetails({ ...details, name: e.target.value })} value={details.name} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} />\r\n                        </div>\r\n                        {(error != \"\") ? <p>{error}</p> : \"\"}\r\n                        <input type=\"submit\" value=\"Create Account\" />\r\n                    </div>\r\n                </form> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage","import React, { useState } from \"react\";\r\nimport \"./style/home.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"chart.js/auto\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst data = [];\r\n\r\nfunction HomePage({ user }) {\r\n  const [bmiData, setBMIData] = useState({\r\n    height: \"\",\r\n    weight: \"\",\r\n  });\r\n\r\n  let [graphBmi, setGraphBmi] = useState([]);\r\n  let [graphLabels, setGraphLabels] = useState([]);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (bmiData.height == \"\" || bmiData.height <= 0) {\r\n      setError(\"*Height needs to be at least 1!\");\r\n    } else if (bmiData.weight == \"\" || bmiData.weight <= 0) {\r\n      setError(\"*Weight needs to be at least 1!\");\r\n    } else {\r\n      setError(\"\");\r\n\r\n      var height = bmiData.height;\r\n      var weight = bmiData.weight;\r\n      var bmi = (weight / (height * height)) * 10000;\r\n      var date = new Date();\r\n      var month = date.toLocaleString('default', { month: 'long' });\r\n      var thisMonth = date.getMonth() + 1\r\n      var thisYear = date.getFullYear() % 100\r\n      var today = date.getDate() + \"/\" + thisMonth + \"/\" + thisYear + \" \" + \r\n      date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n      var today1 = date.getDate() + \"/\" + thisMonth + \"/\" + thisYear\r\n\r\n      // BMI result\r\n      document.getElementById(\"result\").innerHTML = \"BMI: \" + bmi.toFixed(1) + \" kg/cm2\";\r\n\r\n      // BMI advisor\r\n      if(bmi < 18.5){\r\n        document.getElementById(\"advisor\").innerHTML = \"BMI anda underweight, Banyak lah konsumsi makanan-makanan yang berprotein dan jangan lupa untuk berolahraga.\";\r\n      }\r\n      else if(bmi >= 18.5 && bmi <= 24.9){\r\n        document.getElementById(\"advisor\").innerHTML = \"BMI anda normal, Jaga kondisi badan anda dengan mengkonsumsi makanan-makanan yang sehat dan sering berolahraga secara teratur.\";\r\n      }\r\n      else if(bmi >= 25.0 && bmi <= 29.9){\r\n        document.getElementById(\"advisor\").innerHTML = \"BMI anda overweight, Konsumsi lebih sedikit lemak jahat dan banyaklah makan lemak baik. Banyaklah berolahraga untuk mengurangi berat badan yang berlebihan.\";\r\n      }\r\n      else{\r\n        document.getElementById(\"advisor\").innerHTML = \"BMI anda obesity, Kurangi porsi makanan anda dan banyak lah lakukan olahraga dan juga makan-makanan yang bergizi.\";\r\n      }\r\n\r\n      // BMI history\r\n      var table = document.getElementById(\"history\");\r\n      var row = table.insertRow(-1);\r\n      var dateCell = row.insertCell(0);\r\n      var bmiCell = row.insertCell(1);\r\n      var heightCell = row.insertCell(2);\r\n      var weightCell = row.insertCell(3);\r\n      dateCell.innerHTML = today;\r\n      bmiCell.innerHTML = bmi.toFixed(1);\r\n      heightCell.innerHTML = height;\r\n      weightCell.innerHTML = weight;\r\n\r\n      // BMI graph\r\n      setGraphBmi((prevState) => [...prevState, bmi]);\r\n      setGraphLabels((prevState) => [...prevState, today1]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container3\">\r\n      <div className=\"container4\">\r\n        <h2>Hi, {user.name}</h2>\r\n        <div class=\"form-container4\">\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"form-inner4\">\r\n              <h2>BMI Calculator</h2>\r\n              <div class=\"form-group4\">\r\n                <label for=\"height\">Height (cm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"height\"\r\n                  id=\"height\"\r\n                  onChange={(e) => setBMIData({ ...bmiData, height: e.target.value })}\r\n                  value={bmiData.height}\r\n                ></input>\r\n              </div>\r\n              <div class=\"form-group4\">\r\n                <label for=\"weight\">Weight (kg)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  id=\"weight\"\r\n                  onChange={(e) => setBMIData({ ...bmiData, weight: e.target.value })}\r\n                  value={bmiData.weight}\r\n                ></input>\r\n              </div>\r\n              {error != \"\" ? <p className=\"inputErr\">{error}</p> : \"\"}\r\n              <input type=\"submit\" value=\"Calculate\"></input>\r\n              <h3 className=\"result\" id=\"result\">BMI :00.0 kg/cm2</h3>\r\n              <h3 className=\"adTitle\">Advisor:</h3>\r\n              <p className=\"advisor\" id=\"advisor\"></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"container5\">\r\n          <div className=\"chart-container\">\r\n            <div className=\"grafik\" id=\"graph\">\r\n              <h2>BMI Graph</h2>\r\n              <Line\r\n                data={{\r\n                  labels: graphLabels,\r\n                  datasets: [\r\n                    {\r\n                      data: graphBmi,\r\n                      borderColor: \"rgba(104, 55, 129, 0.3)\",\r\n                      backgroundColor: \"rgba(43, 195, 137, 1)\",\r\n                      tension: 0.5,\r\n                      fill: false,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  plugins: {\r\n                    legend: {\r\n                      display: false\r\n                    },\r\n                  },\r\n                  scales: {\r\n                    x: {\r\n                      grid: {\r\n                        display: false,\r\n                      }\r\n                    },\r\n                    y: {\r\n                      suggestedMin: 0,\r\n                      suggestedMax: 100,\r\n                      grid: {\r\n                        display: false,\r\n                      }\r\n                    },\r\n                  },\r\n                }}\r\n              />{\" \"}\r\n            </div>\r\n          </div>\r\n    \r\n          <div className=\"table-container\">\r\n            <table className=\"tabel\" id=\"history\"> \r\n              <h2>BMI History</h2>\r\n              <thead>\r\n                <tr>\r\n                  <th><span className=\"text\">Date/Time</span></th>\r\n                  <th><span className=\"text\">BMI (kg/cm2)</span></th>\r\n                  <th><span className=\"text\">Height (cm)</span></th>\r\n                  <th><span className=\"text\">Weigth (kg)</span></th>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React, { useState } from 'react'\nimport Login from './pages/LoginForm'\nimport Register from './pages/RegisterPage'\nimport Home from './pages/HomePage'\nimport { BrowserRouter as Router, Link, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const Logins = details => {\n    console.log(details)\n\n    setUser({\n      name: details.name,\n      email: details.email,\n      password: details.password\n    });\n  };\n\n  const [loginSuccess, setLoginSuccess] = useState(false)\n  const submitLogin = () => {\n    setLoginSuccess(true);\n    setUser({\n      name: user.name,\n      email: \"\",\n      password: user.password,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      {(user.name == \"\" && user.email == \"\" && user.password == \"\") ? <Register Logins={Logins} /> : \"\"}\n      {(user.name != \"\" && user.email != \"\" && user.password != \"\") ? <Login userData={user} submitLogin={submitLogin} /> : \"\"}\n      {(!loginSuccess) ? \"\" : <Home user={user}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}